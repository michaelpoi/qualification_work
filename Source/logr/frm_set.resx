<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>